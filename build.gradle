apply plugin: 'cpp'
apply plugin: 'visual-studio'

// Define the build model
model {
    // Dependencies
    repositories {
        libs(PrebuiltLibraries) {
        }
    }

    // Targets
    buildTypes {
        Debug
        Release
    }

    // Configurations
    platforms {
        x86 {
            architecture "x86"
        }
        x64 {
            architecture "x86_64"
        }
    }
    
    binaries {
        withType(GoogleTestTestSuiteBinarySpec) {
            lib library: "googleTest", linkage: "static"
        }
    }

    // Artifacts
    components {
        // Disable all DLL compilation
        all {
            binaries.withType(SharedLibraryBinarySpec) {
                buildable = false
            }
        }

        zrt(NativeExecutableSpec) {

            targetPlatform "x86"
            targetPlatform "x64"

            sources {
                cpp {
                    source {
                        srcDirs "src"
                        include "**/*.cpp"
                    }
                    exportedHeaders {
                        srcDirs "src"
                        include "**/*.hpp", "**/*.h"
                    }
                }
            }

            binaries.all {
                // Define toolchain-specific compiler and linker options

                if (toolChain in Gcc) {
                    cppCompiler.args "-w", "-fpermissive"
                    //linker.args
                }
                
                if (toolChain in VisualCpp) {

                    // General
                    cppCompiler.args "/EHsc"
                    cppCompiler.args "/FS"

                    if (buildType == buildTypes.Debug) {
                        linker.args "/DEBUG"
                        cppCompiler.args "/DEBUG"
                        cppCompiler.args "/Zi"
                        cppCompiler.args "/MTd"
                        cppCompiler.args "/Od"
                        
                        cppCompiler.args "/W4" // All warnings
                        cppCompiler.args "/WX" // Warnings as errors
                        
						linker.args "/SUBSYSTEM:CONSOLE"

                    } else {
                        cppCompiler.args "/O2"
						linker.args "/SUBSYSTEM:CONSOLE"
                    }
                }
            }
        }
    }

    // Generate VS Files
    visualStudio {
        solutions.all {
            solutionFile.location = "vs/${name}.sln"
            solutionFile.withContent { TextProvider content ->
                content.asBuilder().insert(0, "# GENERATED FILE: DO NOT EDIT\n")
                //content.text = content.text.replaceAll("HideSolutionNode = FALSE", "HideSolutionNode = TRUE")

                content.text = content.text.replaceAll("Microsoft Visual Studio Solution File, Format Version [0-9]+\\.[0-9]+",
                        "Microsoft Visual Studio Solution File, Format Version 12.00")
            }
        }

        projects.all {
            projectFile.location = "vs/${name}.vcxproj"
            filtersFile.location = "vs/${name}.vcxproj.filters"
            projectFile.withXml {
                asNode().appendNode('PropertyGroup', [Label: 'Custom'])
                        .appendNode('ProjectDetails', "THIS PROJECT IS AUTO-GENERATED: ${project.name}")

                asNode().@ToolsVersion = "12.0"

                // Set platform toolset so you don't end up using VS2010 directories
                asNode().PropertyGroup.findAll({
                    it.@Label == 'Configuration'
                }).each { configNode -> configNode.appendNode("PlatformToolset", "v140") }
            }
        }
    }
}